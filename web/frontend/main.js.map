{"version":3,"sources":["/./src/app/add-task/add-task.component.html","/./src/app/app.component.html","/./src/app/edit-task/edit-task.component.html","/./src/app/login/login.component.html","/./src/app/navbar/navbar.component.html","/./src/app/registration/registration.component.html","/./src/app/task-list/task-list.component.html","/./src/$_lazy_route_resource lazy namespace object","/./src/app/add-task/add-task.component.styl","/./src/app/add-task/add-task.component.ts","/./src/app/app.component.styl","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/auth-interceptor.ts","/./src/app/auth.service.ts","/./src/app/base-form-component.ts","/./src/app/edit-task/edit-task.component.styl","/./src/app/edit-task/edit-task.component.ts","/./src/app/is-auth.guard.ts","/./src/app/is-not-auth.guard.ts","/./src/app/login/login.component.styl","/./src/app/login/login.component.ts","/./src/app/navbar/navbar.component.styl","/./src/app/navbar/navbar.component.ts","/./src/app/priority.service.ts","/./src/app/registration/registration.component.styl","/./src/app/registration/registration.component.ts","/./src/app/status.service.ts","/./src/app/tag-collection.ts","/./src/app/tag.service.ts","/./src/app/task-list/task-list.component.styl","/./src/app/task-list/task-list.component.ts","/./src/app/task.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h1>Новая задача</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <form [formGroup]=\\\"form\\\" (submit)=\\\"submit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Название</label>\\n          <input\\n            type=\\\"email\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('name'),\\n              'is-invalid': !isValidField('name') && isTouchedField('name')\\n            }\\\"\\n            formControlName=\\\"name\\\"\\n            id=\\\"name\\\"\\n            placeholder=\\\"Название задачи\\\"\\n          >\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('name', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"priority\\\">Приоритет</label>\\n          <select\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('priorityId'),\\n              'is-invalid': !isValidField('priorityId') && isTouchedField('priorityId')\\n            }\\\"\\n            formControlName=\\\"priorityId\\\"\\n            id=\\\"priority\\\"\\n            placeholder=\\\"Приоритет задачи\\\"\\n          >\\n              <option *ngFor=\\\"let priority of priorities | async\\\" value=\\\"{{ priority.id }}\\\">\\n                {{ priority.name }}\\n              </option>\\n            </select>\\n            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('priorityId', 'required')\\\">\\n              поле обязательно для заполнения\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"status\\\">Статус</label>\\n          <select\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('statusId'),\\n              'is-invalid': !isValidField('statusId') && isTouchedField('statusId')\\n            }\\\"\\n            formControlName=\\\"statusId\\\"\\n            id=\\\"status\\\"\\n            placeholder=\\\"Статус задачи\\\"\\n          >\\n            <option *ngFor=\\\"let status of statuses | async\\\" value=\\\"{{ status.id }}\\\">\\n              {{ status.name }}\\n            </option>\\n          </select>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('statusId', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label >Теги</label>\\n          <div formArrayName=\\\"tags\\\" class=\\\"tags-list\\\">\\n              <ng-container *ngFor=\\\"let tag of binded.controls; let i=index\\\">\\n                  <input type=\\\"hidden\\\" [formControlName]=\\\"i\\\">\\n              </ng-container>\\n\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-secondary\\\"\\n                *ngFor=\\\"let tag of binded.tags; let i=index\\\"\\n                (click)=\\\"binded.delete(i)\\\"\\n              >\\n                {{ tag.name }}\\n              </button>\\n          </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">Сохранить</button>\\n        <button type=\\\"botton\\\" class=\\\"btn btn btn-light\\\" (click)=\\\"cancel()\\\">Отмена</button>\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <form [formGroup]=\\\"binded.tagsForm\\\">\\n        <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n          <ngb-highlight [result]=\\\"r.name\\\" [term]=\\\"t\\\"></ngb-highlight>\\n        </ng-template>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"typeahead-http\\\">Добавить тег</label>\\n          <input\\n            id=\\\"typeahead-http\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"tag\\\"\\n            [ngbTypeahead]=\\\"binded.search\\\"\\n            [resultTemplate]=\\\"rt\\\"\\n            [inputFormatter]=\\\"formatter\\\"\\n            [editable]=\\\"false\\\"\\n            autocomplete=\\\"false\\\"\\n            placeholder=\\\"Тегм\\\"\\n          />\\n          <span *ngIf=\\\"binded.searching\\\">searching...</span>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h1>Редактирование задачи</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <form [formGroup]=\\\"form\\\" (submit)=\\\"submit()\\\">\\n        <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Название</label>\\n          <input\\n            type=\\\"email\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('name'),\\n              'is-invalid': !isValidField('name') && isTouchedField('name')\\n            }\\\"\\n            formControlName=\\\"name\\\"\\n            id=\\\"name\\\"\\n            placeholder=\\\"Название задачи\\\"\\n          >\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('name', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"priority\\\">Приоритет</label>\\n          <select\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('priorityId'),\\n              'is-invalid': !isValidField('priorityId') && isTouchedField('priorityId')\\n            }\\\"\\n            formControlName=\\\"priorityId\\\"\\n            id=\\\"priority\\\"\\n            placeholder=\\\"Приоритет задачи\\\"\\n          >\\n            <option *ngFor=\\\"let priority of priorities | async\\\" value=\\\"{{ priority.id }}\\\">\\n              {{ priority.name }}\\n            </option>\\n          </select>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('priorityId', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"status\\\">Статус</label>\\n          <select\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('statusId'),\\n              'is-invalid': !isValidField('statusId') && isTouchedField('statusId')\\n            }\\\"\\n            formControlName=\\\"statusId\\\"\\n            id=\\\"status\\\"\\n            placeholder=\\\"Статус задачи\\\"\\n          >\\n            <option *ngFor=\\\"let status of statuses | async\\\" value=\\\"{{ status.id }}\\\">\\n              {{ status.name }}\\n            </option>\\n          </select>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('statusId', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label >Теги</label>\\n          <div formArrayName=\\\"tags\\\" class=\\\"tags-list\\\">\\n            <ng-container *ngFor=\\\"let tag of binded.controls; let i=index\\\">\\n                <input type=\\\"hidden\\\" [formControlName]=\\\"i\\\">\\n            </ng-container>\\n\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-secondary\\\"\\n              *ngFor=\\\"let tag of binded.tags; let i=index\\\"\\n              (click)=\\\"binded.delete(i)\\\"\\n            >\\n              {{ tag.name }}\\n            </button>\\n          </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">Сохранить</button>\\n        <button type=\\\"botton\\\" class=\\\"btn btn btn-light\\\" (click)=\\\"cancel()\\\">Отмена</button>\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <form [formGroup]=\\\"binded.tagsForm\\\">\\n        <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n          <ngb-highlight [result]=\\\"r.name\\\" [term]=\\\"t\\\"></ngb-highlight>\\n        </ng-template>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"typeahead-http\\\">Добавить тег</label>\\n          <input\\n            id=\\\"typeahead-http\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"tag\\\"\\n            [ngbTypeahead]=\\\"binded.search\\\"\\n            [resultTemplate]=\\\"rt\\\"\\n            [inputFormatter]=\\\"formatter\\\"\\n            [editable]=\\\"false\\\"\\n            autocomplete=\\\"false\\\"\\n            placeholder=\\\"Тегм\\\"\\n\\n          />\\n          <span *ngIf=\\\"binded.searching\\\">searching...</span>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n      <h1>Вход</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n      <form [formGroup]=\\\"form\\\" (submit)=\\\"submit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input\\n            type=\\\"email\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('email'),\\n              'is-invalid': !isValidField('email') && isTouchedField('email')\\n            }\\\"\\n            formControlName=\\\"email\\\"\\n            id=\\\"email\\\"\\n            placeholder=\\\"email\\\"\\n          >\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('email', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Пароль</label>\\n          <input\\n            type=\\\"password\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('password'),\\n              'is-invalid': !isValidField('password') && isTouchedField('password')\\n            }\\\"\\n            formControlName=\\\"password\\\"\\n            id=\\\"password\\\"\\n            placeholder=\\\"Пароль\\\"\\n          >\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('password', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('password', 'minlength')\\\">\\n            минимальная длинна 6 символов\\n          </div>\\n        </div>\\n\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"userNotExist\\\">\\n          пользователь не существует\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">Войти</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<nav class=\\\"navbar fixed-top navbar-light bg-light\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Task master</a>\\n    <ul class=\\\"nav justify-content-end\\\">\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!(authStateChange$ | async)\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/registration\\\">Регистрация</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!(authStateChange$ | async)\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Вход</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authStateChange$ | async\\\">\\n        <button class=\\\"btn btn-link nav-link\\\" (click)=\\\"logout()\\\">\\n          Выход\\n        </button>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n        <h1>Регистрация</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n      <form [formGroup]=\\\"form\\\" (submit)=\\\"submit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input\\n            type=\\\"email\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('email'),\\n              'is-invalid': !isValidField('email') && isTouchedField('email')\\n            }\\\"\\n            formControlName=\\\"email\\\"\\n            id=\\\"email\\\"\\n            placeholder=\\\"email\\\"\\n          >\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('email', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('email', 'email')\\\">\\n            не корректный адрес электронной почты\\n          </div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('email', 'UserUniqueEmail')\\\">\\n            ползователь уже существует\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Пароль</label>\\n          <input\\n            type=\\\"password\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('password'),\\n              'is-invalid': !isValidField('password') && isTouchedField('password')\\n            }\\\"\\n            formControlName=\\\"password\\\"\\n            id=\\\"password\\\"\\n            placeholder=\\\"Пароль\\\"\\n          >\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('password', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('password', 'minlength')\\\">\\n            минимальная длинна 6 символов\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"confirmPassword\\\">Пароль ещё раз</label>\\n          <input\\n            type=\\\"password\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{\\n              'is-valid': isValidField('confirmPassword'),\\n              'is-invalid': !isValidField('confirmPassword') && isTouchedField('confirmPassword')\\n            }\\\"\\n            formControlName=\\\"confirmPassword\\\"\\n            id=\\\"confirmPassword\\\"\\n            placeholder=\\\"Пароль\\\"\\n          >\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('confirmPassword', 'required')\\\">\\n            поле обязательно для заполнения\\n          </div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"fieldError('confirmPassword', 'minlength')\\\">\\n            минимальная длинна 6 символов\\n          </div>\\n        </div>\\n        <button type=\\\"botton\\\" class=\\\"btn btn btn-light\\\" (click)=\\\"cancel()\\\">Отмена</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">Зарегистрироваться</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"!(authStateChange$ | async)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      Вы не авторизованы. Для работы с задачами нужно\\n      <a routerLink=\\\"/login\\\">авторизоваться</a>.\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"authStateChange$ | async\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h1>Задачи</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <form [formGroup]=\\\"form\\\" class=\\\"task-filter sticky-top\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Приоритет</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"priority\\\" placeholder=\\\"Приоритет задачи\\\">\\n            <option value=\\\"\\\"></option>\\n            <option *ngFor=\\\"let priority of priorities | async\\\" value=\\\"{{ priority.id }}\\\">\\n              {{ priority.name }}\\n            </option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Статус</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"status\\\" placeholder=\\\"Статус задачи\\\">\\n            <option value=\\\"\\\"></option>\\n            <option *ngFor=\\\"let status of statuses | async\\\" value=\\\"{{ status.id }}\\\">\\n              {{ status.name }}\\n            </option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Сортировка</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"sort\\\" placeholder=\\\"Сортировка\\\">\\n            <option *ngFor=\\\"let sortMode of sortModes\\\" [ngValue]=\\\"sortMode.value\\\">\\n              {{ sortMode.name }}\\n            </option>\\n          </select>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <a routerLink=\\\"/add\\\" class=\\\"btn btn-primary\\\">Новая</a>\\n\\n      <div class=\\\"card task\\\" *ngFor=\\\"let task of tasks | async\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{ task.name }}</h5>\\n          <div class=\\\"card-text\\\">\\n            {{ task.priority }}\\n            {{ task.status }}\\n            <ul class=\\\"tags\\\" *ngIf=\\\"task.tags.length > 0\\\">\\n              <li class=\\\"badge badge-secondary\\\" *ngFor=\\\"let tag of task.tags\\\">{{ tag.name }}</li>\\n            </ul>\\n            <div class=\\\"buttons\\\">\\n              <a routerLink=\\\"/edit/{{ task.id }}\\\" class=\\\"btn btn-primary\\\">\\n                Редактировать\\n              </a>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"delete(task)\\\">\\n                Удалить\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <ngb-pagination\\n        *ngIf=\\\"taskCount > 0 && taskCount > itemPerPage\\\"\\n        [collectionSize]=\\\"taskCount\\\"\\n        [maxSize]=\\\"10\\\"\\n        [pageSize]=\\\"itemPerPage\\\"\\n        [rotate]=\\\"true\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        (pageChange)=\\\"pageChange($event)\\\"\\n      ></ngb-pagination>\\n    </div>\\n  </div>\\n</div>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/*# sourceMappingURL=src/app/add-task/add-task.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXRhc2svYWRkLXRhc2suY29tcG9uZW50LnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0VBQWtFIiwiZmlsZSI6InNyYy9hcHAvYWRkLXRhc2svYWRkLXRhc2suY29tcG9uZW50LnN0eWwifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormArray,  Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TaskService } from '../task.service';\nimport { PriorityService, Priority } from '../priority.service';\nimport { StatusService, Status } from '../status.service';\nimport { BaseFormComponent } from '../base-form-component';\nimport { TagService } from '../tag.service';\nimport { TagCollection } from '../tag-collection';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.styl']\n})\nexport class AddTaskComponent extends BaseFormComponent implements OnInit, OnDestroy {\n  priorities: Observable<Priority[]> = of([]);\n  statuses: Observable<Status[]> = of([]);\n  binded: TagCollection;\n\n  private unsubscribe$ = new Subject<void>();\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _router: Router,\n    private _taskService: TaskService,\n    private _priorityService: PriorityService,\n    private _statusService: StatusService,\n    private _tagService: TagService\n  ) {\n    super();\n\n    this.form = this._formBuilder.group({\n      name: ['', [Validators.required]],\n      priorityId: ['', [Validators.required]],\n      statusId: ['', [Validators.required]],\n      tags: this._formBuilder.array([])\n    });\n\n    this.binded = new TagCollection(\n      this.form.get('tags') as FormArray,\n      this._formBuilder,\n      this._tagService\n    );\n  }\n\n  ngOnInit() {\n    this.priorities = this._priorityService.list();\n    this.statuses = this._statusService.list();\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  formatter = (x: {name: string}) => x.name;\n\n  submit() {\n    if (this.form.valid) {\n      this._taskService\n        .create(this.form.value)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe((val) => { this._router.navigate(['']); })\n      ;\n    }\n  }\n\n  cancel() {\n    this._router.navigate(['']);\n  }\n}\n","module.exports = \"/*# sourceMappingURL=src/app/app.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9EQUFvRCIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc3R5bCJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent {\n  title = 'si';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, InjectionToken } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { EditTaskComponent } from './edit-task/edit-task.component';\nimport { AuthInterceptor } from './auth-interceptor';\nimport { AuthService, TokenStore, TOKEN_STORE } from './auth.service';\nimport { NavbarComponent } from './navbar/navbar.component';\n\nimport { IsAuthGuard } from './is-auth.guard';\nimport { IsNotAuthGuard } from './is-not-auth.guard';\n\nconst routes: Routes = [\n  { path: 'registration', component: RegistrationComponent, canActivate: [IsNotAuthGuard] },\n  { path: 'login', component: LoginComponent, canActivate: [IsNotAuthGuard] },\n  { path: 'add', component: AddTaskComponent, canActivate: [IsAuthGuard] },\n  { path: 'edit/:id', component: EditTaskComponent, canActivate: [IsAuthGuard] },\n  { path: '', component: TaskListComponent, canActivate: [IsAuthGuard] },\n];\n\nconst AuthSetviceFactory = (\n  store: TokenStore,\n  http: HttpClient\n): AuthService => {\n  const storageKey = 'access_token';\n  const service = new AuthService(http, store, storageKey);\n  service.loadToken();\n\n  return service;\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    TaskListComponent,\n    AddTaskComponent,\n    EditTaskComponent,\n    LoginComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    { provide: TOKEN_STORE, useValue: window.sessionStorage},\n    {\n      provide: AuthService,\n      useFactory: AuthSetviceFactory,\n      deps: [ TOKEN_STORE,  HttpClient ]\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor (\r\n      private _auth: AuthService\r\n    ) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      if (!this._auth.isAuth) {\r\n        return next.handle(req);\r\n      }\r\n\r\n      const modified = req.clone({\r\n        setHeaders: {\r\n          'X-AUTH-TOKEN': `Bearer ${this._auth.token}`\r\n        }\r\n      });\r\n\r\n      return next.handle(modified);\r\n    }\r\n}\r\n","import { Injectable, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport {\n  AbstractControl,\n  ValidationErrors,\n  AsyncValidatorFn\n} from '@angular/forms';\nimport { BehaviorSubject, Observable, throwError, of } from 'rxjs';\nimport { pluck, tap, map, catchError } from 'rxjs/operators';\n\nexport const TOKEN_STORE = new InjectionToken<TokenStore>('TOKEN_STORE');\n\nexport interface AccessToken {\n  access_token: string;\n}\n\nexport interface TokenStore {\n  getItem(key: string): string;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\n@Injectable()\nexport class AuthService {\n  private _token: AccessToken;\n\n  readonly authStateChange$ = new BehaviorSubject<boolean>(false);\n\n  constructor(\n      private _http: HttpClient,\n      private _store: TokenStore,\n      private _tokenKeyInStore: string\n  ) {}\n\n  get token(): string {\n    return this._token && this._token.access_token || '';\n  }\n\n  login(email, password): Observable<any> {\n    const params = new HttpParams()\n      .set('email', email)\n      .set('password', password)\n    ;\n\n    return this._http\n      .get( '/api/login', { params })\n      .pipe(\n        pluck('response'),\n        tap((token: string) => {\n          this.setToken({ access_token: token });\n        })\n      )\n    ;\n  }\n\n  logout() {\n    this.resetToken();\n  }\n\n  createUser(email, password, confirmPassword): Observable<any> {\n    const params = new HttpParams()\n      .set('email', email)\n      .set('password', password)\n      .set('confirmPassword', confirmPassword)\n    ;\n\n    return this._http.post( '/api/registration', '', { params } );\n  }\n\n  isUniqueUserEmail(email: string): Observable<boolean> {\n    const params = new HttpParams()\n      .set('email', email)\n    ;\n\n    return this._http.get<boolean>(\n      '/api/is-unique-email',\n       { params }\n    ).pipe(\n      pluck('response')\n    );\n  }\n\n  UniqueUserEmailValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors|null> => {\n      return this\n        .isUniqueUserEmail(control.value)\n        .pipe(\n          catchError(() => of(false)),\n          map(result =>\n            result ? null : {UserUniqueEmail: true}\n          )\n        );\n    };\n  }\n\n  isAuth(): boolean {\n    return Boolean(this._token\n      && this._token.access_token\n    );\n  }\n\n  setToken(token: AccessToken) {\n    this._token = token;\n    this.saveToken();\n  }\n\n  resetToken() {\n    this._token = undefined;\n    this.removeTokenFromStore(this._tokenKeyInStore);\n  }\n\n  saveToken() {\n    this.saveTokenToStore(this._tokenKeyInStore);\n  }\n\n  loadToken() {\n    this.loadTokenFromStore(this._tokenKeyInStore);\n  }\n\n  private saveTokenToStore(key: string) {\n    this._store.setItem(key, JSON.stringify(this._token));\n\n    if (this.isAuth()) {\n      this.authStateChange$.next(true);\n    }\n  }\n\n  private loadTokenFromStore(key: string) {\n    this._token = JSON.parse(this._store.getItem(key)) as AccessToken;\n\n    if (this.isAuth()) {\n      this.authStateChange$.next(true);\n    }\n  }\n\n  private removeTokenFromStore(key: string) {\n    this._store.removeItem(key);\n    this.authStateChange$.next(false);\n  }\n}\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport class BaseFormComponent {\r\n  form: FormGroup;\r\n\r\n  isValidField(name: string): boolean {\r\n    const control = this.form.controls[name];\r\n\r\n    return control.valid;\r\n  }\r\n\r\n  isTouchedField(name: string): boolean {\r\n    const control = this.form.controls[name];\r\n\r\n    return control.touched;\r\n  }\r\n\r\n  fieldError(name: string, error: string) {\r\n    const control = this.form.controls[name];\r\n\r\n    return control.errors && control.errors[error];\r\n  }\r\n}\r\n","module.exports = \"/*# sourceMappingURL=src/app/edit-task/edit-task.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC10YXNrL2VkaXQtdGFzay5jb21wb25lbnQuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvRUFBb0UiLCJmaWxlIjoic3JjL2FwcC9lZGl0LXRhc2svZWRpdC10YXNrLmNvbXBvbmVudC5zdHlsIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { TaskService, Task } from '../task.service';\nimport { PriorityService, Priority } from '../priority.service';\nimport { StatusService, Status } from '../status.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseFormComponent } from '../base-form-component';\nimport { TagService } from '../tag.service';\nimport { TagCollection } from '../tag-collection';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.styl']\n})\nexport class EditTaskComponent extends BaseFormComponent implements OnInit, OnDestroy {\n  priorities: Observable<Priority[]> = of([]);\n  statuses: Observable<Status[]> = of([]);\n  binded: TagCollection;\n\n  private unsubscribe$ = new Subject<void>();\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _taskService: TaskService,\n    private _priorityService: PriorityService,\n    private _statusService: StatusService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _tagService: TagService\n  ) {\n    super();\n\n    this.form = this._formBuilder.group({\n      id: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      priorityId: ['', [Validators.required]],\n      statusId: ['', [Validators.required]],\n      tags: this._formBuilder.array([])\n    });\n\n    this.binded = new TagCollection(\n      this.form.get('tags') as FormArray,\n      this._formBuilder,\n      this._tagService\n    );\n  }\n\n  ngOnInit() {\n    this.priorities = this._priorityService.list();\n    this.statuses = this._statusService.list();\n\n    this._taskService.get(this._route.snapshot.params['id'])\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (task) => {\n          const tags = task.tags;\n          task.tags = [];\n          this.form.patchValue(task);\n\n          tags.forEach((tag) => this.binded.add(tag));\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  formatter = (x: {name: string}) => x.name;\n\n  submit() {\n    if (this.form.valid) {\n      this._taskService.update(this.form.value)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe((val) => { this._router.navigate(['']); })\n      ;\n    }\n  }\n\n  cancel() {\n    this._router.navigate(['']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsAuthGuard implements CanActivate {\n  constructor (\n    private _auth: AuthService,\n    private _router: Router\n  ) {}\n\n  canActivate(): boolean | UrlTree {\n    return this._auth.isAuth()\n      ? true\n      : this._router.parseUrl('/login');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsNotAuthGuard implements CanActivate {\n  constructor (\n    private _auth: AuthService,\n    private _router: Router\n  ) {}\n\n  canActivate(): boolean | UrlTree {\n    return this._auth.isAuth()\n      ? this._router.parseUrl('')\n      : true;\n  }\n}\n","module.exports = \"/*# sourceMappingURL=src/app/login/login.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNERBQTREIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnN0eWwifQ== */\"","import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject, throwError, of } from 'rxjs';\nimport { takeUntil, catchError, mapTo, tap } from 'rxjs/operators';\n\nimport { AuthService } from '../auth.service';\nimport { BaseFormComponent } from '../base-form-component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.styl']\n})\nexport class LoginComponent extends BaseFormComponent implements OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  userNotExist = false;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _router: Router,\n    private _auth: AuthService\n  ) {\n    super();\n\n    this.form = this._formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  submit() {\n    this.userNotExist = false;\n\n    if (this.form.valid) {\n      const registration = this.form.value;\n\n      this._auth\n        .login(\n          registration.email,\n          registration.password\n        )\n        .pipe(\n          takeUntil(this.unsubscribe$),\n          catchError(() => {\n            this.userNotExist = true;\n\n            return of(false);\n          })\n        )\n        .subscribe((state) => {\n          if (state) {\n            this._router.navigate(['']);\n          }\n        })\n      ;\n    }\n  }\n}\n","module.exports = \"/*# sourceMappingURL=src/app/navbar/navbar.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4REFBOEQiLCJmaWxlIjoic3JjL2FwcC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zdHlsIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.styl']\n})\nexport class NavbarComponent implements OnInit {\n  constructor (\n    private _auth: AuthService,\n    private _router: Router\n  ) {}\n\n  get authStateChange$(): BehaviorSubject<boolean> {\n    return this._auth.authStateChange$;\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this._auth.logout();\n    this._router.navigate(['login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n\nexport class Priority {\n  id = '';\n  name = '';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PriorityService {\n  constructor(\n    private _http: HttpClient\n  ) {}\n\n  list(): Observable<Priority[]> {\n    return this._http.get<Priority[]>(\n      '/api/priorities'\n    ).pipe(\n      pluck('response')\n    );\n  }\n}\n","module.exports = \"/*# sourceMappingURL=src/app/registration/registration.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwRUFBMEUiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3RyYXRpb24vcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5zdHlsIn0= */\"","import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AuthService } from '../auth.service';\nimport { BaseFormComponent } from '../base-form-component';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.styl']\n})\nexport class RegistrationComponent extends BaseFormComponent implements OnDestroy {\n  private unsubscribe$ = new Subject<void>();\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _router: Router,\n    private _auth: AuthService\n  ) {\n    super();\n\n    this.form = this._formBuilder.group({\n      email: [\n        '',\n        [Validators.required, Validators.email],\n        [this._auth.UniqueUserEmailValidator()]\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\n    }, { updateOn: 'blur' });\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  submit() {\n    if (this.form.valid) {\n      const registration = this.form.value;\n\n      this._auth\n        .createUser(\n          registration.email,\n          registration.password,\n          registration.confirmPassword\n        )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe((val) => { this._router.navigate(['login']); })\n      ;\n    }\n  }\n\n  cancel() {\n    this._router.navigate(['']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n\nexport class Status {\n  id = '';\n  name = '';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  constructor(\n    private _http: HttpClient\n  ) {}\n\n  list(): Observable<Status[]> {\n    return this._http.get<Status[]>(\n      '/api/statuses'\n    ).pipe(\n      pluck('response')\n    );\n  }\n}\n","import {\r\n  FormArray,\r\n  FormBuilder,\r\n  AbstractControl,\r\n  FormGroup\r\n} from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  tap,\r\n  switchMap,\r\n  catchError,\r\n  pluck,\r\n  filter,\r\n  map\r\n} from 'rxjs/operators';\r\nimport { Tag, TagService } from './tag.service';\r\n\r\nexport class TagCollection {\r\n  private _tags:  FormArray;\r\n  private _tagsObject: Tag[] = [];\r\n  private _builder: FormBuilder;\r\n  private _tagService: TagService;\r\n  public searching = false;\r\n  public tagsForm: FormGroup;\r\n\r\n  get tags(): Tag[] {\r\n    return this._tagsObject;\r\n  }\r\n\r\n  get controls(): AbstractControl[] {\r\n    return this._tags.controls;\r\n  }\r\n\r\n  constructor(\r\n    tagsFormArray: FormArray,\r\n    builder: FormBuilder,\r\n    tagService: TagService\r\n  ) {\r\n    this._tags = tagsFormArray;\r\n    this._builder = builder;\r\n    this._tagService = tagService;\r\n\r\n    this.tagsForm = this._builder.group({tag: ['']});\r\n\r\n    this.tagsForm.valueChanges.pipe(\r\n      pluck('tag'),\r\n      filter((tag) => tag !== undefined)\r\n    )\r\n    .subscribe((tag) => this.add(tag));\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length > 2),\r\n      tap(() => this.searching = true),\r\n      switchMap((term: string) =>\r\n        this._tagService.lookup(term).pipe(\r\n          map((tags) => {\r\n            return tags.filter((tag) => {\r\n              return !this._tagsObject\r\n              .map((t) => t.id)\r\n              .includes(tag.id);\r\n            });\r\n          }),\r\n          catchError(() => of([]))\r\n        )\r\n      ),\r\n      tap(() => this.searching = false)\r\n    )\r\n\r\n  add(tag: Tag) {\r\n    this._tags.push(\r\n      this._builder.control(tag.id)\r\n    );\r\n    this._tagsObject.push(tag);\r\n  }\r\n\r\n  delete(index: number) {\r\n    this._tags.removeAt(index);\r\n    this._tagsObject.splice(index, 1);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n\nexport class Tag {\n  id = '';\n  name = '';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n  constructor(private _http: HttpClient) { }\n\n  lookup(text: string): Observable<Tag[]> {\n    const params = new HttpParams()\n      .set('name', text)\n    ;\n\n    return this._http.get<Tag[]>(\n      '/api/lookup', { params }\n    ).pipe(\n      pluck('response')\n    );\n  }\n}\n","module.exports = \"ul.tags {\\n  padding: 0;\\n  margin: 10px 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\nul.tags > li {\\n  list-style: none;\\n  margin-right: 10px;\\n}\\nul.tags > li:last-child {\\n  margin-right: 0;\\n}\\n.buttons {\\n  margin-top: 10px;\\n}\\n.buttons > .btn {\\n  margin-right: 5px;\\n}\\n.buttons > .btn:last-child {\\n  margin-right: 0;\\n}\\n.card.task {\\n  margin-top: 10px;\\n}\\n.task-filter.sticky-top {\\n  top: 60px;\\n}\\n/*# sourceMappingURL=src/app/task-list/task-list.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay1saXN0L3NyYy9hcHAvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc3R5bCIsInNyYy9hcHAvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVM7RUFDVCxjQUFRO0VBQ1Isb0JBQVM7RUFBVCxhQUFTO0VBQ1QseUJBQWE7VUFBYixtQkFBYTtBQ0NmO0FEQ0U7RUFDRSxnQkFBWTtFQUNaLGtCQUFjO0FDQ2xCO0FEQ0k7RUFDRSxlQUFjO0FDQ3BCO0FERUE7RUFDRSxnQkFBWTtBQ0FkO0FERUU7RUFDRSxpQkFBYztBQ0FsQjtBREVJO0VBQ0UsZUFBYztBQ0FwQjtBREVBO0VBQ0UsZ0JBQVk7QUNBZDtBREVBO0VBQ0UsU0FBSztBQ0FQO0FBQ0Esb0VBQW9FIiwiZmlsZSI6InNyYy9hcHAvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc3R5bCIsInNvdXJjZXNDb250ZW50IjpbInVsLnRhZ3NcclxuICBwYWRkaW5nOiAwXHJcbiAgbWFyZ2luOiAxMHB4IDBcclxuICBkaXNwbGF5OiBmbGV4XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlclxyXG5cclxuICA+IGxpXHJcbiAgICBsaXN0LXN0eWxlOiBub25lXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHhcclxuXHJcbiAgICAmOmxhc3QtY2hpbGRcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAwXHJcblxyXG5cclxuLmJ1dHRvbnNcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG5cclxuICA+IC5idG5cclxuICAgIG1hcmdpbi1yaWdodDogNXB4XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkXHJcbiAgICAgIG1hcmdpbi1yaWdodDogMFxyXG5cclxuLmNhcmQudGFza1xyXG4gIG1hcmdpbi10b3A6IDEwcHhcclxuXHJcbi50YXNrLWZpbHRlci5zdGlja3ktdG9wXHJcbiAgdG9wOiA2MHB4XHJcbiIsInVsLnRhZ3Mge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDEwcHggMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbnVsLnRhZ3MgPiBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbnVsLnRhZ3MgPiBsaTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuLmJ1dHRvbnMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLmJ1dHRvbnMgPiAuYnRuIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG4uYnV0dG9ucyA+IC5idG46bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbi5jYXJkLnRhc2sge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLnRhc2stZmlsdGVyLnN0aWNreS10b3Age1xuICB0b3A6IDYwcHg7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zcmMvYXBwL3Rhc2stbGlzdC90YXNrLWxpc3QuY29tcG9uZW50LmNzcy5tYXAgKi8iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Observable, of, BehaviorSubject, combineLatest, concat } from 'rxjs';\nimport { map, share, switchAll, debounceTime, pluck, tap } from 'rxjs/operators';\n\nimport { TaskService, Task, TaskSort } from '../task.service';\nimport { AuthService } from '../auth.service';\nimport { PriorityService, Priority } from '../priority.service';\nimport { StatusService, Status } from '../status.service';\n\ninterface SortListItem {\n  name: string;\n  value: TaskSort;\n}\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.styl']\n})\nexport class TaskListComponent implements OnInit {\n  private refresh = new BehaviorSubject<boolean>(true);\n\n  form: FormGroup;\n  priorities: Observable<Priority[]> = of([]);\n  statuses: Observable<Status[]> = of([]);\n  tasks: Observable<Task[]> = of([]);\n  taskCount = 0;\n  itemPerPage = 10;\n  page = new BehaviorSubject<number>(1);\n  sortModes: SortListItem[] = [\n    {\n      name: 'Приоритет по возрастанию',\n      value: {\n        field: 'priority',\n        mode: 'asc'\n      }\n    },\n    {\n      name: 'Приоритет по убыванию',\n      value: {\n        field: 'priority',\n        mode: 'desc'\n      }\n    },\n    {\n      name: 'Статс по возрастанию',\n      value: {\n        field: 'status',\n        mode: 'asc'\n      }\n    },\n    {\n      name: 'Статс по убыванию',\n      value: {\n        field: 'status',\n        mode: 'desc'\n      }\n    },\n    {\n      name: 'Название по возрастанию',\n      value: {\n        field: 'name',\n        mode: 'asc'\n      }\n    },\n    {\n      name: 'Название по убыванию',\n      value: {\n        field: 'name',\n        mode: 'desc'\n      }\n    },\n  ];\n\n  get authStateChange$(): BehaviorSubject<boolean> {\n    return this._auth.authStateChange$;\n  }\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _auth: AuthService,\n    private _taskService: TaskService,\n    private _priorityService: PriorityService,\n    private _statusService: StatusService\n  ) {\n    this.form = this._formBuilder.group({\n      priority: [''],\n      status: [''],\n      sort: [{\n        field: 'priority',\n        mode: 'asc'\n      }]\n    });\n  }\n\n  ngOnInit() {\n    this.priorities = this._priorityService.list();\n    this.statuses = this._statusService.list();\n\n    this.tasks = combineLatest(\n      this._auth.authStateChange$,\n      concat(\n        of(this.form.value),\n        this.form.valueChanges.pipe(\n          debounceTime(1000)\n        )\n      ),\n      this.page,\n      this.refresh\n    ).pipe(\n      map(([authState, filter, page]) =>\n        authState\n          ? this._taskService\n            .list(\n              filter.priority,\n              filter.status,\n              (page - 1) * this.itemPerPage,\n              this.itemPerPage,\n              filter.sort\n            ).pipe(\n              tap(tasks => this.taskCount = tasks.count),\n              pluck('tasks'),\n            )\n          : of([])\n      ),\n      share(),\n      switchAll()\n    );\n  }\n\n  pageChange(page: number) {\n    this.page.next(page);\n  }\n\n  delete(task: Task) {\n    if (confirm('Удалить задачу?')) {\n      this._taskService\n        .delete(task.id)\n        .subscribe((val) => this.refresh.next(true))\n      ;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { pluck, catchError } from 'rxjs/operators';\n\nexport class Task {\n  id = '';\n  userId = '';\n  user = '';\n  statusId = '';\n  status = '';\n  priorityId = '';\n  priority = '';\n  name = '';\n  tags  = [];\n}\n\nexport interface TasksWithCount {\n  count: number;\n  tasks: Task[];\n}\n\nexport interface TaskSort {\n  field: string;\n  mode: 'asc' | 'desc';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  constructor(\n    private _http: HttpClient\n  ) {}\n\n  list(\n    priorityId: string = '',\n    statusId: string = '',\n    offset: number = 0,\n    limit: number = 0,\n    sort: TaskSort = {\n      field: '',\n      mode: 'asc'\n    }\n  ): Observable<TasksWithCount>  {\n    const params = new HttpParams()\n      .set('priority_id', priorityId)\n      .set('status_id', statusId)\n      .set('offset', offset.toString())\n      .set('limit', limit.toString())\n      .set('sort_field', sort.field)\n      .set('sort_mode', sort.mode)\n    ;\n\n    return this._http.get<TasksWithCount>(\n      '/api/task', {\n        params\n      }\n    ).pipe(\n      pluck('response')\n    );\n  }\n\n  get(id: string): Observable<Task> {\n    const params = new HttpParams()\n      // .set('order', 'name')\n    ;\n\n    return this._http.get<Task>(\n      `/api/task/${id}`\n    ).pipe(\n      pluck('response')\n    );\n  }\n\n  create(task: Task): Observable<Task> {\n    const params = this.httpParansFromTask(task);\n\n    return this._http.post<Task>(\n      `/api/task`,\n      '',\n      { params }\n    ).pipe(\n      catchError((response) => {\n        // this._errors.flashError(error);\n        return throwError(response.error.errors);\n      }),\n      pluck('response')\n    );\n  }\n\n  update(task: Task): Observable<Task> {\n    const params = this.httpParansFromTask(task);\n\n    return this._http.put<Task>(\n      `/api/task/${task.id}`,\n      '',\n      { params }\n    ).pipe(\n      catchError((response) => {\n        // this._errors.flashError(error);\n        return throwError(response.error.errors);\n      }),\n      pluck('response')\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this._http.delete(\n      `/api/task/${id}`\n    ).pipe(\n      pluck('response')\n    );\n  }\n\n  private httpParansFromTask(task: Task): HttpParams {\n    let params = new HttpParams()\n      .set('status_id', task.statusId)\n      .set('priority_id', task.priorityId)\n      .set('name', task.name)\n    ;\n\n    task.tags.forEach(\n      (tag, index) => {\n        params = params.set(`tags[${index}]`, tag);\n      }\n    );\n\n    return params;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}